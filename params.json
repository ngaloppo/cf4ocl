{"name":"cf4ocl","tagline":"C Framework for OpenCL","body":"Summary\r\n=======\r\n\r\nThe C Framework for OpenCL (cf4ocl) is a pure C99 set of libraries and\r\nutilities with the goal of facilitating: 1) the rapid development of \r\nOpenCL C programs; 2) the benchmark of OpenCL events, such as kernel \r\nexecution and data transfers; and, 3) analysis of the OpenCL \r\nenvironment and kernel requirements.\r\n\r\ncf4ocl is composed of four parts: i) library; ii) command-line \r\nutilities; iii) unit tests; and, iv) examples. The library offers \r\nfunctions which aim to achieve goals 1) and 2). The command-line \r\nutilities are focused on goal 3). The unit tests aim to verify that the \r\nlibrary functions are working properly. Finally, the examples show how \r\nto integrate the library functions in fully working OpenCL programs.\r\n\r\nThe target platform of cf4ocl is Linux, although, being pure C99, it \r\ncan be compiled to other platforms as long as the dependencies, \r\n[GLib][] and [OpenCL][], are met. The reference compiler is GCC with \r\n`-Wall` and `-Wextra` flags activated. The code is verified with \r\n[cppcheck][] and is fully commented. API documentation can be generated \r\nwith [Doxygen][].\r\n\r\nLibrary code is licensed under [LGPLv3][], while the remaining code is \r\nlicensed under [GPLv3](http://www.gnu.org/licenses/gpl.html).\r\n\r\n<!--- \r\nTable of contents\r\n=================\r\n[TOC]\r\n-->\r\n\r\nIntroduction\r\n============\r\n\r\nStructure\r\n---------\r\n\r\n* **Library**\r\n    * CL Utils\r\n    * CL Profiler\r\n    * GError framework\r\n* **Library tests**\r\n    * CL Profiler\r\n    * GError framework\r\n* **Utilities**\r\n    * Device query\r\n    * Kernel info\r\n* **Examples**\r\n    * Bank conflicts test\r\n    * Matrix multiplication\r\n\r\nLibrary\r\n-------\r\n\r\n### CL Utils\r\n\r\n* Create/initialize OpenCL objects such as platform, device, context, \r\ncommand queues, devices, and so on with just one instruction (also one\r\ninstruction for freeing/releasing these objects).\r\n* Build an OpenCL program with one instruction by passing an array of\r\nfilenames containing the kernels.\r\n* Automatic or manual device selection.\r\n* Doesn't hide OpenCL objects from you.\r\n\r\n### CL Profiler\r\n\r\n* Get detailed profiling information about OpenCL events, including\r\nrelative and absolute times.\r\n* Supports multiple command queues and overlapping events (e.g. such\r\nas simultaneous kernel execution and data transfer).\r\n\r\n### GError framework\r\n\r\n* Generic C error handling framework based on GError object from GLib.\r\n* Just two macros.\r\n* Required by CL Utils and CL Profiler.\r\n\r\nUtilities\r\n---------\r\n\r\n### Device query\r\n\r\nSimple implementation of a program for querying available OpenCL\r\nplatforms and devices with clean and useful output.\r\n\r\n### Kernel info\r\n\r\nStatic analysis of OpenCL kernels.\r\n\r\nHow to use cf4ocl\r\n=================\r\n\r\nDependencies\r\n------------\r\n\r\nIn order to compile cf4ocl and use it in projects, two dependencies are\r\nrequired: 1) [OpenCL][]; and, 2) [GLib][] (v2.32 or newer).\r\n\r\n### OpenCL\r\n\r\nThe OpenCL headers (for compiling) and shared library (for linking) can\r\nbe installed from the packages offered by different OpenCL vendors such\r\nas [AMD][AMDSDK], [Intel][IntelSDK] or [Nvidia][NvidiaSDK]. \r\n\r\nAlternatively, it is possible to install an OpenCL development \r\nenvironment in a some recent Linux distributions. For example, in Debian\r\n7 and Ubuntu 13.04:\r\n\r\n    $ sudo apt-get install ocl-icd-opencl-dev\r\n\r\nThis will install the headers and shared library system-wide, avoiding \r\nthe need to specify their location to GCC. However, to actually run an \r\nOpenCL program it is necessary to have a vendor implementation \r\ninstalled.\r\n\r\n### GLib\r\n\r\nThe simplest way to install [GLib][] is using the package manager of\r\nthe Linux distribution. For Debian and Ubuntu:\r\n\r\n    $ sudo apt-get install libglib2.0-dev\r\n    \r\nIt is also advisable to install the `libglib2.0-0-dbg` or equivalent\r\npackage to allow debugging at the GLib level.\r\n\r\nLibrary, utilities, tests and examples\r\n--------------------------------------\r\n\r\nAssuming a working development environment with OpenCL and GLib \r\nproperly setup, to build everything it is simply necessary to run `make`\r\nwithin the cf4ocl directory.\r\n\r\nIt is possible to build only specific targets, for example:\r\n\r\n    $ make library\r\n    $ make utils\r\n    $ make tests\r\n    $ make examples\r\n\r\nIf the build failed, confirm if OpenCL and GLib are properly installed,\r\nand if GCC can find the OpenCL headers and shared library. If not,\r\nset the headers location in the `CLINCLUDES` Makefile variable, and set\r\nthe shared library location in the `CLLIBDIR` Makefile variable.\r\n\r\nUsing the library in a new project\r\n----------------------------------\r\n\r\n### Compiling and linking\r\n\r\nWhen building a program based on cf4ocl (or any OpenCL program) with \r\nGCC, it may be necessary to specify the location of the OpenCL headers \r\nwith the `-I` flag, and the location of the shared library \r\n(libOpenCL.so) with the `-L` flag. If the OpenCL development files were\r\ninstalled from the package manager (e.g. the `ocl-icd-opencl-dev` \r\npackage in Debian and Ubuntu), this is usually not required.\r\n\r\nIn order to **compile** with GLib (required by cf4ocl), the following \r\nline should be added to the GCC syntax:\r\n\r\n    `pkg-config --cflags glib-2.0`\r\n    \r\nIn order to **link** with GLib (required by cf4ocl), it is necessary to \r\nadd the following line to the GCC syntax:\r\n\r\n    `pkg-config --libs glib-2.0`\r\n\r\nThese two lines will expand correctly to the `-I` and `-l` flags \r\nrequired for compiling and linking, respectively.\r\n\r\n### Tutorial\r\n\r\nA tutorial will be available soon. For now take a look at the examples, \r\nutilities and tests to see how the library can be used. You can use\r\njust one part of the library, but both CL Profiler \r\n([clprofiler.c](https://github.com/FakenMC/cf4ocl/blob/master/clprofiler.c) \r\nand [clprofiler.h](https://github.com/FakenMC/cf4ocl/blob/master/clprofiler.h)) \r\nand CL Utils ([clutils.c](https://github.com/FakenMC/cf4ocl/blob/master/clutils.c)\r\nand [clutils.h](https://github.com/FakenMC/cf4ocl/blob/master/clutils.h)) \r\nrequire the GError framework ([gerrorf.h](https://github.com/FakenMC/cf4ocl/blob/master/gerrorf.h)).\r\n\r\nGenerating the API documentation\r\n--------------------------------\r\n\r\nThe API documentation can be generated with [Doxygen][] (version 1.8 or\r\nnewer). In the cf4ocl directory run:\r\n\r\n    $ doxygen\r\n    \r\nThe documentation will be generated in the `./doc` folder.\r\n\r\nOther useful C frameworks/utilities for OpenCL\r\n==============================================\r\n\r\nIf cf4ocl does not meet your requirements, take a look at the following\r\nprojects:\r\n\r\n* [Simple OpenCL][]\r\n* [The OpenCL utility library][]\r\n* [Computing Language Utility][]\r\n* [OCL-MLA][]\r\n\r\n<!---\r\nConclusions\r\n===========\r\n\r\nReferences\r\n==========\r\n\r\nAppendices\r\n==========\r\n-->\r\n\r\n[GLib]: https://developer.gnome.org/glib/ \"GLib\"\r\n[OpenCL]: http://www.khronos.org/opencl/ \"OpenCL\"\r\n[Doxygen]: http://www.doxygen.org/â€Ž \"Doxygen\"\r\n[cppcheck]: http://cppcheck.sourceforge.net/ \"cppcheck\"\r\n[LGPLv3]: http://www.gnu.org/licenses/lgpl.html) \"LGPLv3\"\r\n[GPLv3]: http://www.gnu.org/licenses/gpl.html \"GPLv3\"\r\n[AMDSDK]: http://developer.amd.com/tools-and-sdks/heterogeneous-computing/amd-accelerated-parallel-processing-app-sdk/ \"AMD\"\r\n[IntelSDK]: http://software.intel.com/en-us/vcsource/tools/opencl-sdk \"Intel\"\r\n[NvidiaSDK]: https://developer.nvidia.com/category/zone/cuda-zone \"Nvidia\"\r\n[clheaders]: http://www.khronos.org/registry/cl/ \"Khronos\"\r\n\r\n[Simple OpenCL]: http://code.google.com/p/simple-opencl/ \"Simple OpenCL\"\r\n[The OpenCL utility library]: https://github.com/Oblomov/CLU \"The OpenCL utility library\"\r\n[Computing Language Utility]: https://github.com/Computing-Language-Utility/CLU \"Computing Language Utility\"\r\n[OCL-MLA]: http://tuxfan.github.io/ocl-mla/ \"OCL-MLA\"\r\n","google":"UA-42378595-1","note":"Don't delete this file! It's used internally to help with page regeneration."}